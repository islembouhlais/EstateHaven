package project.app.demo.user;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.dao.DataAccessException;import org.springframework.jdbc.core.JdbcTemplate;import org.springframework.jdbc.core.RowMapper;import org.springframework.jdbc.support.GeneratedKeyHolder;import org.springframework.jdbc.support.KeyHolder;import org.springframework.stereotype.Repository;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.sql.Statement;import java.util.List;@Repositorypublic class userRepository {    @Autowired    private JdbcTemplate jdbcTemplate;// Insert a new userpublic int insertUser(userEntity user) {    String sql = "INSERT INTO user (username,email,password_hash,created_at) VALUES (?, ?,?,?)";    KeyHolder keyHolder = new GeneratedKeyHolder();        try {            jdbcTemplate.update(connection -> {                PreparedStatement ps = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);                ps.setString(1, user.getUsername());                ps.setString(2, user.getEmail());                ps.setString(3, user.getPassword_hash());                ps.setTimestamp(4, user.getCreated_at());                return ps;            }, keyHolder);        }        catch (DataAccessException e) {            throw new RuntimeException("Error inserting user", e);        }        return keyHolder.getKey().intValue();   // }   // return -1;}    // Select all users    public List<userEntity> getAllUsers() {        String sql = "SELECT * FROM user";        try {            return jdbcTemplate.query(sql, new UserRowMapper());        } catch (DataAccessException e) {            throw new RuntimeException("Error fetching users", e);        }    }    //Email exist//    public boolean emailExists(String email) {//        String sql = "SELECT COUNT(*) FROM user WHERE email = ?";//        try {//            Integer count = jdbcTemplate.queryForObject(sql, Integer.class, email);//            return count != null && count > 0;//        } catch (DataAccessException e) {//            throw new RuntimeException("Error checking email existence", e);//        }//    }    // Update a user//    public void updateUser(int id, String newName, String newEmail) {//        String sql = "UPDATE user SET name = ?, email = ? WHERE id = ?";//        try {//            jdbcTemplate.update(sql, newName, newEmail, id);//        } catch (DataAccessException e) {//            throw new RuntimeException("Error updating user", e);//        }//    }    // Delete a user//    public void deleteUser(int id) {//        String sql = "DELETE FROM user WHERE id = ?";//        try {//            jdbcTemplate.update(sql, id);//        } catch (DataAccessException e) {//            throw new RuntimeException("Error deleting user", e);//        }//    public userEntity Add_user(userEntity user){////        return null;//    }}    class UserRowMapper implements RowMapper<userEntity> {        @Override        public userEntity mapRow(ResultSet rs, int rowNum) throws SQLException {            userEntity user=new userEntity();            user.setUser_id(rs.getInt("user_id"));            user.setUsername(rs.getString("username"));            user.setEmail(rs.getString("email"));            return user;        }    }